{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Advanced CatPack crafter","text":"<p>This program simplifies creating an advanced Prism Launcher CatPack.</p> <p>This site hosts documentation on how to use this program. You can navigate using the sidebar.</p> <p>Other useful links:</p> <ul> <li>Prism Launcher Community CatPacks (Discord)</li> <li>Issue tracker</li> <li>Discord server (Ask for support in there!)</li> <li>Pull requests</li> </ul>"},{"location":"contributing/","title":"Contributing","text":"<p>Want to help? Great! To get started, follow these steps. This guide assumes you know how to use Git on a basic level.</p> <ul> <li>Fork this repository and clone your fork.</li> <li>Create a virtual environment using <code>python -m venv venv</code>, then run <code>venv\\scripts\\activate</code> to activate it.</li> <li>Install all dependencies using <code>pip install -r requirements.txt</code>.</li> <li>Make your changes, then test your changes to see if they will work.</li> <li>Commit your changes and push it, then create a Pull Request.</li> <li>Your PR will be reviewed and will either have changes requested or approved and merged.</li> </ul> <p>We recommend the following when contributing:</p> <ul> <li>Using VS Code (or a fork of it)? You should see recommendations regarding extensions to use. We recommend installing them.</li> <li>We also recommend installing <code>autopep8</code> via <code>pip install autopep8</code> to ensure you follow styling.</li> <li>Before committing your changes and pushing them it may be a good idea to build and then test them. This isn't strictly necessary, but can be helpful.</li> <li>Be helpful in your commit names.</li> </ul>"},{"location":"downloads/","title":"Downloads","text":"<p>The following page lists releases of this software.</p> <ul> <li>Latest release on GitHub</li> <li>\u26a0\ufe0fUnstable builds on GitHub\u26a0\ufe0f - please be aware that this is beta software and stuff can break if you are using these versions. You will receive limited support if you are using these builds.</li> <li>Running the script from source - same as above in that this is considered \"beta\" software.</li> </ul>"},{"location":"downloads/#historical-versions","title":"Historical versions","text":"<p>This is here for archival purposes. When new versions are released, it may take a little bit before this table is updated.</p> <pre><code>| Version | Changelog link | Direct download link |\n|---------|----------------|----------------------|\n| v1.0.0  | TBA            | TBA                  |\n</code></pre>"},{"location":"instructions/","title":"How to use","text":"<p>Using the app should be fairly simple, so hopefully this will be a walk in the park.</p>"},{"location":"instructions/#1-locate-your-images","title":"1. Locate your images","text":"<p>It's a good idea to consolidate the images you will be using in a singular folder, or at least remember the path to get to them. Otherwise, you'll have take very long time trying to find the images you want.</p>"},{"location":"instructions/#2-using-the-app","title":"2. Using the app","text":"<p>Assuming you have already downloaded the program, run it and you'll be presented with a couple of options.</p> <ul> <li><code>CatPack Name</code>: THe name of the CatPack, both in the JSON and the folder name. Be careful - if a folder with that name already exists and has a CatPack setup in it, the new JSON file will overwrite it.</li> <li><code>Select Output Folder</code>: Where the CatPack's folder will be located in.</li> <li><code>Select Default Image (Optional)</code>: Allows you to select an image that will be set as a \"default\", which means it wll show if no other image can be shown. The default image will be previewed at a smaller size beneath the options.</li> <li><code>Add Images</code>: Adds images to your CatPack. Each image will ask you for a Start and End date/month. Be cautious: the program does not have sanity checks for the calendar dates, so be sure not to accidentally input the 31st of Febuary (or something of that vein)!</li> <li><code>Confirm</code>: Creates the CatPack using the above options.</li> </ul>"},{"location":"instructions/#using-the-catpack","title":"Using the CatPack","text":"<p>Once your CatPack is created, you can move the folder with all the CatPack stuff into your Prism installation's <code>catpacks</code> folder. This should be located at <code>../PrismLauncher/catpacks</code>, where <code>..</code> varies depending on the form of Prism you are using:</p> \"What would .. mean in my case?\"      If you are using a portable build of Prism, .. represents the directory where your portable build resides.      If you are using a fully installed build of Prism, .. is represented differently depending on OS:      - Windows: `%appdata%`     - macOS: `~/Library/Application Support`     - Linux: `~/.local/share`      However, if you use either of the following package managers, they will instead be located at:      - Scoop: `%HOMEPATH%/scoop/persist` - Note that the directory may be seen as `prismlauncher` instead of `PrismLauncher`. This is as intended.     - Flatpak: `~/.var/app/org.prismlauncher.PrismLauncher/data` &lt;/details"},{"location":"run-from-source/","title":"Run from source","text":"<p>This page details how to run the program from source. If you have no idea what this page is saying, you probably shouldn't follow it.</p>"},{"location":"run-from-source/#setup","title":"Setup","text":"<p>In order to build, you'll need the following as prerequisites:</p> <ul> <li>A working Python installation that supports the code. The version used for developing this program originally was Python 3.11 from the official Python website.</li> <li>Required dependencies installed. They are marked in the <code>requirements.txt</code> file for your convenience.</li> <li>While not required, it is highly recommended to use a virtual environment. You can create one using <code>python -m venv venv</code>, then using <code>venv\\scripts\\activate</code>.</li> </ul>"},{"location":"run-from-source/#running-the-app","title":"Running the app","text":"<p>Once you have the \"App\" category of dependencies installed, you can simply run <code>python script.py</code>.</p>"},{"location":"run-from-source/#compiling-from-source","title":"Compiling from source","text":"<p>After installing dependencies in both the \"App\" and \"Compiling\" categories, you can run <code>pyinstaller script.py</code> to compile. Some additional arguments you might want to use are:</p> <ul> <li><code>--onefile</code>: Builds into a singular executable file.</li> <li><code>--name &lt;name&gt;</code>: Sets the executable output's name.</li> <li><code>--windowed</code>: Prevents CMD from coming up when you launch the executable.</li> </ul>"},{"location":"run-from-source/#building-the-documentation-site","title":"Building the documentation site","text":"<p>You only need to install the dependencies listed in the \"Documentation\" category. After that, you can simply run <code>mkdocs build</code>, which will output a <code>site/</code> folder that contains the fully built site.</p> <p>Do NOT attempt to run <code>mkdocs gh-deploy</code>, as it will create a new branch and (attempt to) push it to the remote.</p>"}]}